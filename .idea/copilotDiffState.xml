<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/pom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/pom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;org.example&lt;/groupId&gt;&#10;    &lt;artifactId&gt;challenge-conversor-monedas&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;&#10;            &lt;version&gt;2.15.2&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;&lt;/project&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;org.example&lt;/groupId&gt;&#10;    &lt;artifactId&gt;challenge-conversor-monedas&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;&#10;            &lt;artifactId&gt;gson&lt;/artifactId&gt;&#10;            &lt;version&gt;2.10.1&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;&lt;/project&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/ConsultorMoneda.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/ConsultorMoneda.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import com.google.gson.Gson;&#10;import com.google.gson.JsonObject;&#10;import java.net.URI;&#10;import java.net.http.HttpClient;&#10;import java.net.http.HttpRequest;&#10;import java.net.http.HttpResponse;&#10;&#10;public class ConsultorMoneda {&#10;    private static final String API_KEY = &quot;bf16cf01a4f74b6874d5d6c9&quot;;&#10;    private static final String BASE_URL = &quot;https://v6.exchangerate-api.com/v6/&quot; + API_KEY + &quot;/latest/&quot;;&#10;    &#10;    private HttpClient client;&#10;    private Gson gson;&#10;    &#10;    public ConsultorMoneda() {&#10;        this.client = HttpClient.newHttpClient();&#10;        this.gson = new Gson();&#10;    }&#10;    &#10;    public JsonObject obtenerTasasCambio(String monedaBase) {&#10;        try {&#10;            // Crear la solicitud HTTP&#10;            HttpRequest request = HttpRequest.newBuilder()&#10;                    .uri(URI.create(BASE_URL + monedaBase))&#10;                    .GET()&#10;                    .build();&#10;            &#10;            // Enviar la solicitud y obtener respuesta&#10;            HttpResponse&lt;String&gt; response = client.send(request, &#10;                    HttpResponse.BodyHandlers.ofString());&#10;            &#10;            // Verificar código de estado&#10;            if (response.statusCode() == 200) {&#10;                // Parsear respuesta JSON&#10;                JsonObject jsonResponse = gson.fromJson(response.body(), JsonObject.class);&#10;                return jsonResponse;&#10;            } else {&#10;                System.out.println(&quot;Error en la API: Código &quot; + response.statusCode());&#10;                return null;&#10;            }&#10;            &#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Error al conectar con la API: &quot; + e.getMessage());&#10;            return null;&#10;        }&#10;    }&#10;    &#10;    public double obtenerTasaConversion(String monedaOrigen, String monedaDestino) {&#10;        JsonObject respuesta = obtenerTasasCambio(monedaOrigen);&#10;        &#10;        if (respuesta != null &amp;&amp; respuesta.has(&quot;conversion_rates&quot;)) {&#10;            JsonObject tasas = respuesta.getAsJsonObject(&quot;conversion_rates&quot;);&#10;            &#10;            if (tasas.has(monedaDestino)) {&#10;                return tasas.get(monedaDestino).getAsDouble();&#10;            }&#10;        }&#10;        &#10;        return -1; // Error&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Conversor.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Conversor.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;import java.util.Scanner;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class Conversor {&#10;    private ConsultorMoneda consultorMoneda;&#10;    private Scanner scanner;&#10;    private List&lt;RegistroConversion&gt; historialConversiones;&#10;&#10;    public Conversor() {&#10;        this.consultorMoneda = new ConsultorMoneda();&#10;        this.scanner = new Scanner(System.in);&#10;        this.historialConversiones = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void exibirMenu() {&#10;        System.out.println(&quot;*************************************************&quot;);&#10;        System.out.println(&quot;    Sea bienvenido/a al Conversor de Moneda&quot;);&#10;        System.out.println(&quot;*************************************************&quot;);&#10;        System.out.println();&#10;        System.out.println(&quot;1) Dólar =&gt;&gt; Peso argentino&quot;);&#10;        System.out.println(&quot;2) Peso argentino =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;3) Dólar =&gt;&gt; Real brasileño&quot;);&#10;        System.out.println(&quot;4) Real brasileño =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;5) Dólar =&gt;&gt; Peso colombiano&quot;);&#10;        System.out.println(&quot;6) Peso colombiano =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;7) Dólar =&gt;&gt; Euro&quot;);&#10;        System.out.println(&quot;8) Euro =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;9) Dólar =&gt;&gt; Yen japonés&quot;);&#10;        System.out.println(&quot;10) Yen japonés =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;11) Dólar =&gt;&gt; Peso mexicano&quot;);&#10;        System.out.println(&quot;12) Peso mexicano =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;13) Dólar =&gt;&gt; Libra esterlina&quot;);&#10;        System.out.println(&quot;14) Libra esterlina =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;15) Dólar =&gt;&gt; Yuan chino&quot;);&#10;        System.out.println(&quot;16) Yuan chino =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;17) Dólar =&gt;&gt; Franco suizo&quot;);&#10;        System.out.println(&quot;18) Franco suizo =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;19) Ver historial de conversiones&quot;);&#10;        System.out.println(&quot;20) Salir&quot;);&#10;        System.out.println(&quot;Elija una opción válida:&quot;);&#10;        System.out.println(&quot;*************************************************&quot;);&#10;    }&#10;&#10;    public void iniciar() {&#10;        int opcion = 0;&#10;&#10;        while (opcion != 20) {&#10;            exibirMenu();&#10;            try {&#10;                opcion = scanner.nextInt();&#10;&#10;                if (opcion &gt;= 1 &amp;&amp; opcion &lt;= 18) {&#10;                    realizarConversion(opcion);&#10;                } else if (opcion == 19) {&#10;                    mostrarHistorial();&#10;                } else if (opcion == 20) {&#10;                    System.out.println(&quot;¡Gracias por usar el Conversor de Monedas!&quot;);&#10;                } else {&#10;                    System.out.println(&quot;Opción inválida. Por favor, elija una opción válida.&quot;);&#10;                }&#10;            } catch (Exception e) {&#10;                System.out.println(&quot;Error: Por favor ingrese un número válido.&quot;);&#10;                scanner.nextLine(); // Limpiar buffer&#10;            }&#10;&#10;            System.out.println();&#10;        }&#10;    }&#10;&#10;    private void realizarConversion(int opcion) {&#10;        String monedaOrigen, monedaDestino, nombreOrigen, nombreDestino;&#10;&#10;        switch (opcion) {&#10;            case 1:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;ARS&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos argentinos&quot;;&#10;                break;&#10;            case 2:&#10;                monedaOrigen = &quot;ARS&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos argentinos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 3:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;BRL&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Reales brasileños&quot;;&#10;                break;&#10;            case 4:&#10;                monedaOrigen = &quot;BRL&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Reales brasileños&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 5:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;COP&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos colombianos&quot;;&#10;                break;&#10;            case 6:&#10;                monedaOrigen = &quot;COP&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos colombianos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 7:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;EUR&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Euros&quot;;&#10;                break;&#10;            case 8:&#10;                monedaOrigen = &quot;EUR&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Euros&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 9:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;JPY&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Yenes japoneses&quot;;&#10;                break;&#10;            case 10:&#10;                monedaOrigen = &quot;JPY&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Yenes japoneses&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 11:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;MXN&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos mexicanos&quot;;&#10;                break;&#10;            case 12:&#10;                monedaOrigen = &quot;MXN&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos mexicanos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 13:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;GBP&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Libras esterlinas&quot;;&#10;                break;&#10;            case 14:&#10;                monedaOrigen = &quot;GBP&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Libras esterlinas&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 15:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;CNY&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Yuanes chinos&quot;;&#10;                break;&#10;            case 16:&#10;                monedaOrigen = &quot;CNY&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Yuanes chinos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 17:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;CHF&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Francos suizos&quot;;&#10;                break;&#10;            case 18:&#10;                monedaOrigen = &quot;CHF&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Francos suizos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            default:&#10;                return;&#10;        }&#10;&#10;        System.out.print(&quot;Ingrese el valor que deseas convertir: &quot;);&#10;        try {&#10;            double cantidad = scanner.nextDouble();&#10;&#10;            if (cantidad &lt; 0) {&#10;                System.out.println(&quot;Error: El valor debe ser positivo.&quot;);&#10;                pausarYContinuar();&#10;                return;&#10;            }&#10;&#10;            double tasa = consultorMoneda.obtenerTasaConversion(monedaOrigen, monedaDestino);&#10;&#10;            if (tasa != -1) {&#10;                double resultado = cantidad * tasa;&#10;                System.out.printf(&quot;El valor %.2f [%s] corresponde al valor final de =&gt;&gt;&gt; %.2f [%s]%n&quot;,&#10;                    cantidad, nombreOrigen, resultado, nombreDestino);&#10;                &#10;                // Guardar en el historial&#10;                RegistroConversion registro = new RegistroConversion(&#10;                    monedaOrigen, monedaDestino, cantidad, resultado, tasa);&#10;                historialConversiones.add(registro);&#10;                &#10;            } else {&#10;                System.out.println(&quot;Error al obtener la tasa de conversión. Inténtelo de nuevo.&quot;);&#10;            }&#10;&#10;            pausarYContinuar();&#10;&#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Error: Por favor ingrese un número válido.&quot;);&#10;            scanner.nextLine(); // Limpiar buffer&#10;            pausarYContinuar();&#10;        }&#10;    }&#10;&#10;    private void mostrarHistorial() {&#10;        System.out.println(&quot;Historial de conversiones:&quot;);&#10;        if (historialConversiones.isEmpty()) {&#10;            System.out.println(&quot;No hay conversiones en el historial.&quot;);&#10;        } else {&#10;            for (RegistroConversion registro : historialConversiones) {&#10;                System.out.println(registro);&#10;            }&#10;        }&#10;        pausarYContinuar();&#10;    }&#10;&#10;    private void pausarYContinuar() {&#10;        System.out.println();&#10;        System.out.print(&quot;Presione Enter para continuar...&quot;);&#10;        try {&#10;            scanner.nextLine(); // Consumir cualquier entrada pendiente&#10;            scanner.nextLine(); // Esperar Enter del usuario&#10;        } catch (Exception e) {&#10;            // Si hay algún problema, simplemente continúa&#10;        }&#10;        System.out.println();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import java.util.Scanner;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class Conversor {&#10;    private ConsultorMoneda consultorMoneda;&#10;    private Scanner scanner;&#10;    private List&lt;RegistroConversion&gt; historialConversiones;&#10;&#10;    public Conversor() {&#10;        this.consultorMoneda = new ConsultorMoneda();&#10;        this.scanner = new Scanner(System.in);&#10;        this.historialConversiones = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public void exibirMenu() {&#10;        System.out.println(&quot;*************************************************&quot;);&#10;        System.out.println(&quot;    Sea bienvenido/a al Conversor de Moneda&quot;);&#10;        System.out.println(&quot;*************************************************&quot;);&#10;        System.out.println();&#10;        System.out.println(&quot;1) Dólar =&gt;&gt; Peso argentino&quot;);&#10;        System.out.println(&quot;2) Peso argentino =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;3) Dólar =&gt;&gt; Real brasileño&quot;);&#10;        System.out.println(&quot;4) Real brasileño =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;5) Dólar =&gt;&gt; Peso colombiano&quot;);&#10;        System.out.println(&quot;6) Peso colombiano =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;7) Dólar =&gt;&gt; Euro&quot;);&#10;        System.out.println(&quot;8) Euro =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;9) Dólar =&gt;&gt; Yen japonés&quot;);&#10;        System.out.println(&quot;10) Yen japonés =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;11) Dólar =&gt;&gt; Peso mexicano&quot;);&#10;        System.out.println(&quot;12) Peso mexicano =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;13) Dólar =&gt;&gt; Libra esterlina&quot;);&#10;        System.out.println(&quot;14) Libra esterlina =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;15) Dólar =&gt;&gt; Yuan chino&quot;);&#10;        System.out.println(&quot;16) Yuan chino =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;17) Dólar =&gt;&gt; Franco suizo&quot;);&#10;        System.out.println(&quot;18) Franco suizo =&gt;&gt; Dólar&quot;);&#10;        System.out.println(&quot;19) Ver historial de conversiones&quot;);&#10;        System.out.println(&quot;20) Salir&quot;);&#10;        System.out.println(&quot;Elija una opción válida:&quot;);&#10;        System.out.println(&quot;*************************************************&quot;);&#10;    }&#10;&#10;    public void iniciar() {&#10;        int opcion = 0;&#10;&#10;        while (opcion != 20) {&#10;            exibirMenu();&#10;            try {&#10;                opcion = scanner.nextInt();&#10;&#10;                if (opcion &gt;= 1 &amp;&amp; opcion &lt;= 18) {&#10;                    realizarConversion(opcion);&#10;                } else if (opcion == 19) {&#10;                    mostrarHistorial();&#10;                } else if (opcion == 20) {&#10;                    System.out.println(&quot;¡Gracias por usar el Conversor de Monedas!&quot;);&#10;                } else {&#10;                    System.out.println(&quot;Opción inválida. Por favor, elija una opción válida.&quot;);&#10;                }&#10;            } catch (Exception e) {&#10;                System.out.println(&quot;Error: Por favor ingrese un número válido.&quot;);&#10;                scanner.nextLine(); // Limpiar buffer&#10;            }&#10;&#10;            System.out.println();&#10;        }&#10;    }&#10;&#10;    private void realizarConversion(int opcion) {&#10;        String monedaOrigen, monedaDestino, nombreOrigen, nombreDestino;&#10;&#10;        switch (opcion) {&#10;            case 1:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;ARS&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos argentinos&quot;;&#10;                break;&#10;            case 2:&#10;                monedaOrigen = &quot;ARS&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos argentinos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 3:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;BRL&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Reales brasileños&quot;;&#10;                break;&#10;            case 4:&#10;                monedaOrigen = &quot;BRL&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Reales brasileños&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 5:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;COP&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos colombianos&quot;;&#10;                break;&#10;            case 6:&#10;                monedaOrigen = &quot;COP&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos colombianos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 7:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;EUR&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Euros&quot;;&#10;                break;&#10;            case 8:&#10;                monedaOrigen = &quot;EUR&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Euros&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 9:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;JPY&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Yenes japoneses&quot;;&#10;                break;&#10;            case 10:&#10;                monedaOrigen = &quot;JPY&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Yenes japoneses&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 11:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;MXN&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Pesos mexicanos&quot;;&#10;                break;&#10;            case 12:&#10;                monedaOrigen = &quot;MXN&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Pesos mexicanos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 13:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;GBP&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Libras esterlinas&quot;;&#10;                break;&#10;            case 14:&#10;                monedaOrigen = &quot;GBP&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Libras esterlinas&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 15:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;CNY&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Yuanes chinos&quot;;&#10;                break;&#10;            case 16:&#10;                monedaOrigen = &quot;CNY&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Yuanes chinos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            case 17:&#10;                monedaOrigen = &quot;USD&quot;;&#10;                monedaDestino = &quot;CHF&quot;;&#10;                nombreOrigen = &quot;Dólares&quot;;&#10;                nombreDestino = &quot;Francos suizos&quot;;&#10;                break;&#10;            case 18:&#10;                monedaOrigen = &quot;CHF&quot;;&#10;                monedaDestino = &quot;USD&quot;;&#10;                nombreOrigen = &quot;Francos suizos&quot;;&#10;                nombreDestino = &quot;Dólares&quot;;&#10;                break;&#10;            default:&#10;                return;&#10;        }&#10;&#10;        System.out.print(&quot;Ingrese el valor que deseas convertir: &quot;);&#10;        try {&#10;            double cantidad = scanner.nextDouble();&#10;&#10;            if (cantidad &lt; 0) {&#10;                System.out.println(&quot;Error: El valor debe ser positivo.&quot;);&#10;                pausarYContinuar();&#10;                return;&#10;            }&#10;&#10;            double tasa = consultorMoneda.obtenerTasaConversion(monedaOrigen, monedaDestino);&#10;&#10;            if (tasa != -1) {&#10;                double resultado = cantidad * tasa;&#10;                System.out.printf(&quot;El valor %.2f [%s] corresponde al valor final de =&gt;&gt;&gt; %.2f [%s]%n&quot;,&#10;                    cantidad, nombreOrigen, resultado, nombreDestino);&#10;                &#10;                // Guardar en el historial&#10;                RegistroConversion registro = new RegistroConversion(&#10;                    monedaOrigen, monedaDestino, cantidad, resultado, tasa);&#10;                historialConversiones.add(registro);&#10;                &#10;            } else {&#10;                System.out.println(&quot;Error al obtener la tasa de conversión. Inténtelo de nuevo.&quot;);&#10;            }&#10;&#10;            pausarYContinuar();&#10;&#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Error: Por favor ingrese un número válido.&quot;);&#10;            scanner.nextLine(); // Limpiar buffer&#10;            pausarYContinuar();&#10;        }&#10;    }&#10;&#10;    private void mostrarHistorial() {&#10;        System.out.println(&quot;===============================================&quot;);&#10;        System.out.println(&quot;         HISTORIAL DE CONVERSIONES&quot;);&#10;        System.out.println(&quot;===============================================&quot;);&#10;        &#10;        if (historialConversiones.isEmpty()) {&#10;            System.out.println(&quot;No hay conversiones en el historial.&quot;);&#10;        } else {&#10;            System.out.println(&quot;Últimas &quot; + historialConversiones.size() + &quot; conversiones:&quot;);&#10;            System.out.println();&#10;            &#10;            for (int i = historialConversiones.size() - 1; i &gt;= 0; i--) {&#10;                RegistroConversion registro = historialConversiones.get(i);&#10;                System.out.println((historialConversiones.size() - i) + &quot;. &quot; + registro.obtenerResumen());&#10;            }&#10;        }&#10;        &#10;        pausarYContinuar();&#10;    }&#10;&#10;    private void pausarYContinuar() {&#10;        System.out.println();&#10;        System.out.print(&quot;Presione Enter para continuar...&quot;);&#10;        try {&#10;            scanner.nextLine(); // Consumir cualquier entrada pendiente&#10;            scanner.nextLine(); // Esperar Enter del usuario&#10;        } catch (Exception e) {&#10;            // Si hay algún problema, simplemente continúa&#10;        }&#10;        System.out.println();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/JsonTest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/JsonTest.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;import com.fasterxml.jackson.databind.ObjectMapper;&#10;import com.fasterxml.jackson.databind.JsonNode;&#10;&#10;public class JsonTest {&#10;    public static void main(String[] args) {&#10;        try {&#10;            // Crear ObjectMapper para manejar JSON&#10;            ObjectMapper mapper = new ObjectMapper();&#10;&#10;            // Ejemplo de JSON string&#10;            String jsonString = &quot;{\&quot;nombre\&quot;:\&quot;Juan\&quot;,\&quot;edad\&quot;:25,\&quot;ciudad\&quot;:\&quot;Madrid\&quot;}&quot;;&#10;&#10;            // Parsear JSON&#10;            JsonNode jsonNode = mapper.readTree(jsonString);&#10;&#10;            // Leer valores del JSON&#10;            String nombre = jsonNode.get(&quot;nombre&quot;).asText();&#10;            int edad = jsonNode.get(&quot;edad&quot;).asInt();&#10;            String ciudad = jsonNode.get(&quot;ciudad&quot;).asText();&#10;&#10;            System.out.println(&quot;Nombre: &quot; + nombre);&#10;            System.out.println(&quot;Edad: &quot; + edad);&#10;            System.out.println(&quot;Ciudad: &quot; + ciudad);&#10;&#10;            System.out.println(&quot;¡JSON funciona correctamente!&quot;);&#10;&#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import com.google.gson.Gson;&#10;import com.google.gson.JsonObject;&#10;&#10;public class JsonTest {&#10;    public static void main(String[] args) {&#10;        try {&#10;            // Crear instancia de Gson&#10;            Gson gson = new Gson();&#10;            &#10;            // Ejemplo de JSON string&#10;            String jsonString = &quot;{\&quot;nombre\&quot;:\&quot;Juan\&quot;,\&quot;edad\&quot;:25,\&quot;ciudad\&quot;:\&quot;Madrid\&quot;}&quot;;&#10;            &#10;            // Parsear JSON usando Gson&#10;            JsonObject jsonObject = gson.fromJson(jsonString, JsonObject.class);&#10;            &#10;            // Leer valores del JSON&#10;            String nombre = jsonObject.get(&quot;nombre&quot;).getAsString();&#10;            int edad = jsonObject.get(&quot;edad&quot;).getAsInt();&#10;            String ciudad = jsonObject.get(&quot;ciudad&quot;).getAsString();&#10;            &#10;            System.out.println(&quot;Nombre: &quot; + nombre);&#10;            System.out.println(&quot;Edad: &quot; + edad);&#10;            System.out.println(&quot;Ciudad: &quot; + ciudad);&#10;            &#10;            System.out.println(&quot;¡GSON funciona correctamente!&quot;);&#10;            &#10;            // Ejemplo adicional: convertir objeto Java a JSON&#10;            Persona persona = new Persona(&quot;Maria&quot;, 30, &quot;Barcelona&quot;);&#10;            String jsonPersona = gson.toJson(persona);&#10;            System.out.println(&quot;Objeto convertido a JSON: &quot; + jsonPersona);&#10;            &#10;        } catch (Exception e) {&#10;            System.out.println(&quot;Error: &quot; + e.getMessage());&#10;        }&#10;    }&#10;}&#10;&#10;// Clase auxiliar para demostrar conversión de objetos&#10;class Persona {&#10;    private String nombre;&#10;    private int edad;&#10;    private String ciudad;&#10;    &#10;    public Persona(String nombre, int edad, String ciudad) {&#10;        this.nombre = nombre;&#10;        this.edad = edad;&#10;        this.ciudad = ciudad;&#10;    }&#10;    &#10;    // Getters necesarios para Gson&#10;    public String getNombre() { return nombre; }&#10;    public int getEdad() { return edad; }&#10;    public String getCiudad() { return ciudad; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Main.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or&#10;// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        //TIP Press &lt;shortcut actionId=&quot;ShowIntentionActions&quot;/&gt; with your caret at the highlighted text&#10;        // to see how IntelliJ IDEA suggests fixing it.&#10;        System.out.printf(&quot;Hello and welcome!&quot;);&#10;&#10;        for (int i = 1; i &lt;= 5; i++) {&#10;            //TIP Press &lt;shortcut actionId=&quot;Debug&quot;/&gt; to start debugging your code. We have set one &lt;icon src=&quot;AllIcons.Debugger.Db_set_breakpoint&quot;/&gt; breakpoint&#10;            // for you, but you can always add more by pressing &lt;shortcut actionId=&quot;ToggleLineBreakpoint&quot;/&gt;.&#10;            System.out.println(&quot;i = &quot; + i);&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package org.example;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Conversor conversor = new Conversor();&#10;        conversor.iniciar();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/RegistroConversion.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/RegistroConversion.java" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import java.time.LocalDateTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;public class RegistroConversion {&#10;    private String monedaOrigen;&#10;    private String monedaDestino;&#10;    private double cantidadOriginal;&#10;    private double cantidadConvertida;&#10;    private double tasaUsada;&#10;    private LocalDateTime fechaHora;&#10;    &#10;    public RegistroConversion(String monedaOrigen, String monedaDestino, &#10;                             double cantidadOriginal, double cantidadConvertida, &#10;                             double tasaUsada) {&#10;        this.monedaOrigen = monedaOrigen;&#10;        this.monedaDestino = monedaDestino;&#10;        this.cantidadOriginal = cantidadOriginal;&#10;        this.cantidadConvertida = cantidadConvertida;&#10;        this.tasaUsada = tasaUsada;&#10;        this.fechaHora = LocalDateTime.now();&#10;    }&#10;    &#10;    public String obtenerResumen() {&#10;        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;dd/MM/yyyy HH:mm:ss&quot;);&#10;        return String.format(&quot;[%s] %.2f %s → %.2f %s (Tasa: %.4f)&quot;,&#10;                fechaHora.format(formatter),&#10;                cantidadOriginal, monedaOrigen,&#10;                cantidadConvertida, monedaDestino,&#10;                tasaUsada);&#10;    }&#10;    &#10;    // Getters&#10;    public String getMonedaOrigen() { return monedaOrigen; }&#10;    public String getMonedaDestino() { return monedaDestino; }&#10;    public double getCantidadOriginal() { return cantidadOriginal; }&#10;    public double getCantidadConvertida() { return cantidadConvertida; }&#10;    public double getTasaUsada() { return tasaUsada; }&#10;    public LocalDateTime getFechaHora() { return fechaHora; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>